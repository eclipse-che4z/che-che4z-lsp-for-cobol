/*
 * Copyright (c) 2023 Broadcom.
 * The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Broadcom, Inc. - initial API and implementation
 */

parser grammar CompilerDirectivesParser;
options {tokenVocab = CompilerDirectivesLexer;}

compilerOptions: compilerOption | (compilerOption COMMACHAR compilerOptions)+;
compilerOption
    : deprecatedCompilerOptions
    | compilerXOpts
    | cicsTranslatorCompileDirectivedKeywords
    | cobolCompilerOption
    ;

// compiler options
compilerXOpts
       : XOPTS LPARENCHAR compilerXOptsOption (COMMACHAR? compilerXOptsOption)* RPARENCHAR
       ;

compilerXOptsOption
       : APOST
       | CBLCARD
       | CICS
       | COBOL2
       | COBOL3
       | CPSM
       | DBCS
       | DEBUG
       | DLI
       | EDF
       | EXCI
       | FEPI
       | ((FLAG | F_CHAR) LPARENCHAR (E_CHAR | I_CHAR | S_CHAR | U_CHAR | W_CHAR) (COMMACHAR (E_CHAR | I_CHAR | S_CHAR | U_CHAR | W_CHAR))? RPARENCHAR)
       | LENGTH
       | ((LINECOUNT | LC) LPARENCHAR INTEGERLITERAL RPARENCHAR)
       | LINKAGE
       | NATLANG
       | NOCBLCARD
       | NOCPSM
       | NODEBUG
       | NOEDF
       | NOFEPI
       | NOLENGTH
       | NOLINKAGE
       | NONUM
       | NOOPTIONS
       | NOSEQ
       | NOSPIE
       | NOVBREF
       | NUM
       | OPTIONS
       | QUOTE
       | SEQ
       | SP
       | SPACE LPARENCHAR INTEGERLITERAL RPARENCHAR
       | SPIE
       | SYSEIB
       | VBREF
       ;

cicsTranslatorCompileDirectivedKeywords
       : CBLCARD | COBOL2 | COBOL3 | CPSM | DLI | EDF | EXCI | FEPI | NATLANG | NOCBLCARD | NOCPSM | NODEBUG | NOEDF
       | NOFEPI | NOLENGTH | NOLINKAGE | NOOPTIONS | NOSPIE | OPTIONS | SP | SPIE | SYSEIB
       ;

deprecatedCompilerOptions:
            CPP
           | (DATEPROC | DP) (LPARENCHAR (FLAG | NOFLAG)? COMMACHAR? (TRIG | NOTRIG)? RPARENCHAR)?
           | EPILOG
           | GDS
           | GRAPHIC
           | LEASM
           | LIB
           | LIN
           | MARGINS LPARENCHAR LITERAL COMMACHAR LITERAL (COMMACHAR LITERAL)? RPARENCHAR
           | NATLANG LPARENCHAR (CS | EN | KA) RPARENCHAR
           | NUMPROC LPARENCHAR MIG RPARENCHAR
           | NOCMPR2
           | (NODATEPROC | NODP)
           | NODE
           | NOEPILOG
           | NOFLAGMIG
           | NOGRAPHIC
           | NOLIB
           | NOOPSEQUENCE
           | (NOOPTIMIZE | NOOPT)
           | NOP
           | NOPROLOG
           | NOSTDTRUNC
           | NSEQ
           | OPMARGINS LPARENCHAR LITERAL COMMACHAR LITERAL (COMMACHAR LITERAL)? RPARENCHAR
           | OPSEQUENCE LPARENCHAR LITERAL COMMACHAR LITERAL RPARENCHAR
           | OP
           | PROLOG
           | RES
           | (SIZE | SZ) LPARENCHAR (MAX | LITERAL) RPARENCHAR
           | (YEARWINDOW | YW) LPARENCHAR LITERAL RPARENCHAR
        ;

cobolCompilerOption
   : ADATA | NOADATA
   | ADV | NOADV
   | AFP LPARENCHAR (NOVOLATILE | VOLATILE) RPARENCHAR
   | APOST | QUOTE | Q_CHAR
   | ARCH LPARENCHAR INTEGERLITERAL RPARENCHAR
   | (ARITH | AR) LPARENCHAR (EXTEND | E_CHAR | COMPAT | C_CHAR) RPARENCHAR
   | AWO | NOAWO
   | BLOCK0 | NOBLOCK0
   | (BUFSIZE | BUF) LPARENCHAR (INTEGERLITERAL | INTEGERLITERAL_WITH_K) RPARENCHAR
   | CICS (LPARENCHAR LITERAL RPARENCHAR)? | NOCICS
   | (CODEPAGE | CP) LPARENCHAR INTEGERLITERAL RPARENCHAR
   | COMPILE | C_CHAR | (NOCOMPILE | NOC) (LPARENCHAR (S_CHAR | E_CHAR | W_CHAR) RPARENCHAR)?
   | (COPYLOC | CPLC) LPARENCHAR ((SYSLIB | IDENTIFIER) COMMACHAR)? (DSN | PATH) LPARENCHAR (LITERAL | dataSetName) RPARENCHAR RPARENCHAR
   | NOCOPYLOC | NOCPLC
   | (COPYRIGHT | CPYR) LPARENCHAR LITERAL RPARENCHAR | NOCOPYRIGHT | NOCPYR
   | (CURRENCY | CURR) LPARENCHAR CURRENCY_SYMBOL RPARENCHAR | NOCURRENCY | NOCURR
   | DATA LPARENCHAR INTEGERLITERAL RPARENCHAR
   | DBCS | NODBCS
   | DECK | D_CHAR | NODECK | NOD
   | (DEFINE | DEF) LPARENCHAR IDENTIFIER ((COMMACHAR | EQUALCHAR) IDENTIFIER)? RPARENCHAR | NODEFINE | NODEF
   | DIAGTRUNC | DTR | NODIAGTRUNC | NODTR
   | (DISPSIGN | DS) LPARENCHAR (COMPAT | SEP | C_CHAR | S_CHAR) RPARENCHAR
   | DLL | NODLL
   | DUMP | DU | NODUMP | NODU
   | DYNAM | DYN | NODYNAM | NODYN
   | (EXIT | EX) LPARENCHAR (
        ((INEXIT | INX | LIBEXIT | LIBX | PRTEXIT | PRTX | ADEXIT | ADX | MSGEXIT | MSGX)
            LPARENCHAR (IDENTIFIER | LITERAL) (COMMACHAR (IDENTIFIER | LITERAL))? RPARENCHAR)
        | (NOINEXIT | NOINX | NOLIBEXIT | NOLIBX | NOPRTEXIT | NOPRTX | NOADEXIT | NOADX | NOMSGEXIT | NOMSGX)
      )* RPARENCHAR
   | NOEXIT | NOEX
   | EXPORTALL | EXP | NOEXPORTALL | NOEXP
   | FASTSRT | FSRT | NOFASTSRT | NOFSRT
   | (FLAG | F_CHAR) LPARENCHAR (E_CHAR | I_CHAR | S_CHAR | U_CHAR | W_CHAR) (COMMACHAR (E_CHAR | I_CHAR | S_CHAR | U_CHAR | W_CHAR))? RPARENCHAR
   | NOFLAG | NOF
   | FLAGSTD LPARENCHAR (M_CHAR | I_CHAR | H_CHAR) (D_CHAR | N_CHAR | S_CHAR | DN | DS | ND | NS | SD | SN)? (COMMACHAR O_CHAR)? RPARENCHAR
   | NOFLAGSTD
   | HGPR LPARENCHAR (PRESERVE | NOPRESERVE) RPARENCHAR
   | (INITCHECK | IC) (LPARENCHAR (LAX | STRICT)? RPARENCHAR)? | NOINITCHECK | NOIC
   | INITIAL | NOINITIAL
   | INLINE | INL | NOINLINE | NOINL
   | INTDATE LPARENCHAR (ANSI | LILIAN) RPARENCHAR
   | (INVDATA | INVD) (LPARENCHAR invdataSuboptions (COMMACHAR invdataSuboptions)* RPARENCHAR)? | NOINVDATA | NOINVD
   | (LANGUAGE | LANG) LPARENCHAR (ENGLISH | EN | JAPANESE | JA | JP | UENGLISH | UE) RPARENCHAR
   | (LINECOUNT | LC) LPARENCHAR INTEGERLITERAL RPARENCHAR
   | LIST | NOLIST
   | LP LPARENCHAR INTEGERLITERAL RPARENCHAR
   | MAP (LPARENCHAR (HEX | DEC) RPARENCHAR)? | NOMAP
   | MAXPCF LPARENCHAR INTEGERLITERAL RPARENCHAR
   | (MDECK | MD) (LPARENCHAR (C_CHAR | COMPILE | NOC | NOCOMPILE) RPARENCHAR)? | NOMDECK | NOMD
   | NAME (LPARENCHAR (ALIAS | NOALIAS) RPARENCHAR)? | NONAME
   | (NSYMBOL | NS) LPARENCHAR (NATIONAL | NAT | DBCS) RPARENCHAR
   | NUMBER | NUM | NONUMBER | NONUM
   | (NUMCHECK | NC) (LPARENCHAR numcheckSuboptions (COMMACHAR numcheckSuboptions)* RPARENCHAR)?
   | NONUMCHECK
   | NONC
   | NUMPROC LPARENCHAR (NOPFD | PFD) RPARENCHAR
   | OBJECT | OBJ | NOOBJECT | NOOBJ
   | OFFSET | OFF | NOOFFSET | NOOFF
   | OPTFILE
   | (OPTIMIZE | OPT) (LPARENCHAR INTEGERLITERAL RPARENCHAR)
   | (OUTDD | OUT) LPARENCHAR dataSetName RPARENCHAR
   | (PARMCHECK | PC) (LPARENCHAR (MSG | ABD) (COMMACHAR INTEGERLITERAL)? RPARENCHAR)? | NOPARMCHECK | NOPC
   | (PGMNAME | PGMN) LPARENCHAR (CO | COMPAT | LM | LONGMIXED | LONGUPPER | LU | M_CHAR | MIXED | U_CHAR | UPPER) RPARENCHAR
   | (QUALIFY | QUA) LPARENCHAR (COMPAT | C_CHAR | EXTEND | E_CHAR) RPARENCHAR
   | RENT | NORENT
   | RMODE LPARENCHAR (ANY | AUTO | INTEGERLITERAL) RPARENCHAR
   | RULES LPARENCHAR rulesSuboptions (COMMACHAR rulesSuboptions)* RPARENCHAR | NORULES
   | SEQUENCE | SEQ | NOSEQUENCE | NOSEQ
   | (SERVICE | SERV) LPARENCHAR LITERAL RPARENCHAR | NOSERVICE | NOSERV
   | (SOURCE | S_CHAR) (LPARENCHAR (HEX | DEC) RPARENCHAR)? | NOSOURCE | NOS
   | SPACE LPARENCHAR INTEGERLITERAL RPARENCHAR
   | SQL (LPARENCHAR LITERAL RPARENCHAR)? | NOSQL
   | SQLCCSID | SQLC | NOSQLCCSID | NOSQLC
   | SQLIMS (LPARENCHAR LITERAL RPARENCHAR)? | NOSQLIMS
   | (SSRANGE | SSR) LPARENCHAR (ssrangeSuboptions (COMMACHAR ssrangeSuboptions)*)? RPARENCHAR | (NOSSRANGE | NOSSR)
   | STGOPT | SO | NOSTGOPT | NOSO
   | SUPPRESS | SUPP | NOSUPPRESS | NOSUPP
   | TERMINAL | TERM | NOTERMINAL | NOTERM
   | (TEST | NOTEST) (LPARENCHAR (testSuboptions (COMMACHAR testSuboptions)*)? RPARENCHAR)?
   | THREAD | NOTHREAD
   | TRUNC LPARENCHAR (BIN | OPT | STD) RPARENCHAR
   | TUNE LPARENCHAR INTEGERLITERAL RPARENCHAR
   | VBREF | NOVBREF
   | VLR LPARENCHAR (STANDARD | S_CHAR | COMPAT | C_CHAR) RPARENCHAR
   | (VSAMOPENFS | VS) LPARENCHAR (SUCC | S_CHAR | COMPAT | C_CHAR) RPARENCHAR
   | (WORD | WD) LPARENCHAR (IDENTIFIER | INTEGERLITERAL | CICS) RPARENCHAR | NOWORD | NOWD
   | (XMLPARSE | XP) LPARENCHAR (COMPAT | C_CHAR | XMLSS | X_CHAR) RPARENCHAR
   | (XREF | X_CHAR) (LPARENCHAR (FULL | SHORT) RPARENCHAR)? | NOXREF | NOX
   | (ZONECHECK | ZC) LPARENCHAR (MSG | ABD) RPARENCHAR | NOZONECHECK | NOZC
   | (ZONEDATA | ZD) LPARENCHAR (PFD | MIG | NOPFD) RPARENCHAR
   | ZWB | NOZWB | deprecatedCompilerOptions
   ;

ssrangeSuboptions
   : NOZLEN
   | ZLEN
   | ABD
   | MSG
   ;

testSuboptions
   : DWARF
   | NODWARF
   | EJPD
   | NOEJPD
   | (SEPARATE | SEP) (LPARENCHAR (DSNAME | NODSNAME) RPARENCHAR)?
   | NOSEPARATE
   | NOSEP
   | SOURCE
   | SO
   | NOSOURCE
   | NOSO
   ;

rulesSuboptions
   : ENDPERIOD
   | ENDP
   | NOENDPERIOD
   | EVENPACK
   | EVENP
   | NOEVENPACK
   | LAXPERF
   | LXPRF
   | NOLAXPERF
   | SLACKBYTES
   | SLCKB
   | NOSLACKBYTES
   | OMITODOMIN
   | OOM
   | NOOMITODOMIN
   | UNREF
   | NOUNREFALL
   | NOUNRA
   | NOUNREFSOURCE
   | NOUNRS
   | LAXREDEF
   | LXRDF
   | NOLAXREDEF
   ;

numcheckSuboptions
   : ZON (LPARENCHAR numcheckZonSuboptions (COMMACHAR numcheckZonSuboptions)* RPARENCHAR)?
   | NOZON
   | PAC
   | NOPAC
   | BIN (LPARENCHAR (TRUNCBIN | NOTRUNCBIN) RPARENCHAR)?
   | NOBIN
   | MSG
   | ABD
   ;

numcheckZonSuboptions
   : ALPHNUM | NOALPHNUM | LAX | STRICT
   ;

invdataSuboptions
   : CLEANSIGN
   | CS
   | NOCLEANSIGN
   | NOCS
   | FORCENUMCMP
   | FNC
   | NOFORCENUMCMP
   | NOFNC
   ;

// FIXME: make it possible to use any string
word
   : IDENTIFIER
   | INTEGERLITERAL
   | CICS
   | NAME
   ;

dataSetName
   : word | FILENAME (DOT word)*
   ;