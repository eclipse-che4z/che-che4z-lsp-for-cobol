<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\JavaCheckTest.spec.ts">
    <testCase name="Checks Java version If Java version is supported" duration="4"/>
    <testCase name="Checks Java version If Java version is not supported" duration="1"/>
    <testCase name="Checks Java installation when required version is supported" duration="2"/>
    <testCase name="Checks Java installation should skip not relevant lines" duration="0"/>
    <testCase name="Checks Java installation should skip not relevant lines and fail" duration="1"/>
    <testCase name="Checks Java installation when required version is not supported" duration="0"/>
    <testCase name="Checks Java installation when &apos;error&apos; event is emitted  - spawned" duration="1"/>
    <testCase name="Checks Java installation when &apos;error&apos; event is emitted  - not be spawned" duration="0"/>
    <testCase name="Checks Java installation when &apos;close&apos; event is emitted" duration="0"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\CopybookDownloadServiceTest.spec.ts">
    <testCase name="Test fetchCopybook against bad and correct configurations Given a copybook name that is not a valid member on MF, the copybook is not downloaded" duration="2"/>
    <testCase name="Test fetchCopybook against bad and correct configurations Given a copybook name but a wrong instance of profile, the copybook is not downloaded and exception is thrown" duration="0"/>
    <testCase name="Test fetchCopybook against bad and correct configurations Given a copybook name that is a valid member on MF, the fetchCopybook correctly invoke download from MF" duration="0"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to fetchCopybook fetchCopybook rethrow ZoweError from zoweApi" duration="2"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleCopybook handleCopybook rethrow ZoweError from zoweApi" duration="0"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleCopybook handleCopybook delete copybook from its internal queue if the copybook is a valid member on MF" duration="1"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleDataset handleDataset rethow non NotFound ZoweErrors" duration="0"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleDataset handleDataset show an error if copybook is not found" duration="1"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleDataset handleDataset show an error for non ZoweError" duration="0"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleQueue handleQueue show an error for non ZoweError" duration="1"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleQueue handleQueue handle Invalid credentials ZoweError" duration="0"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleQueue handleQueue handle Connection refused ZoweError" duration="1"/>
    <testCase name="Receiving an error from zowe api layer, copybooks are not retrivied and user is correctly notified Suite of tests related to handleQueue handleQueue handle No password ZoweError" duration="0"/>
    <testCase name="Test the creation of folders that contains copybooks downloaded from MF against correct configuration in settings provided by the user With a valid configuration of dataset, copybook is created on FS" duration="3"/>
    <testCase name="Validate download copybooks from mainframe with correct and incorrect configuration provided Given a defined workspace and profile, the copybook is added to the download queue" duration="96"/>
    <testCase name="Validate download copybooks from mainframe with correct and incorrect configuration provided Given a not defined profile, the copybook is not downloaded and user is notified" duration="43"/>
    <testCase name="Validate download copybooks from mainframe with correct and incorrect configuration provided Given a not defined workspace, the copybook is not downloaded and user is notified" duration="34"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\CopybookResolveURITest.spec.ts">
    <testCase name="Resolve local copybook against bad configuration of target folders given an undefined value as list of folders, the copybook is not retrieved" duration="0"/>
    <testCase name="Resolve local copybook against bad configuration of target folders given an empty list of folders, the copybook is not retrieved" duration="1"/>
    <testCase name="Resolve local copybook against bad configuration of target folders given a folder that not contains copybooks, the target copybook is not retrieved" duration="1"/>
    <testCase name="Resolve local copybook against bad configuration of target folders given a not empty folder, a copybook that is not present in that folder is not retrivied and the uri returned is undefined" duration="1"/>
    <testCase name="Resolve local copybook present in one or more folders specified by the user given a folder that contains the target copybook, it is found and its uri is returned" duration="0"/>
    <testCase name="Resolve local copybook present in one or more folders specified by the user given two times the same folder that contains the target copybook, one uri is still returned" duration="0"/>
    <testCase name="Resolve local copybook present in one or more folders specified by the user Given a copybook with extension on filesystem, the uri is correctly returned" duration="1"/>
    <testCase name="With invalid input parameters, the list of URI that represent copybook downloaded are not generated given a profile but no dataset, the result list returned is empty" duration="0"/>
    <testCase name="With invalid input parameters, the list of URI that represent copybook downloaded are not generated given a list of dataset but no profile, the result list returned is empty" duration="1"/>
    <testCase name="With allowed input parameters, the list of URI that represent copybook downloaded is correctly generated given profile and dataset list with one element, the result list is correctly generated with size 1 " duration="0"/>
    <testCase name="Prioritize search criteria for copybooks test suite With only a local folder defined in the settings.json, the search is applied locally" duration="1"/>
    <testCase name="Prioritize search criteria for copybooks test suite With no settings provided, two search strategies are applied and function return an empty string" duration="1"/>
    <testCase name="Prioritize search criteria for copybooks test suite With both local and dsn references defined in the settings.json, the search is applied on local resourcesfirst" duration="5"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\LocalCopybookResolverTest.spec.ts">
    <testCase name="test parse method against bad setting configuration parse a not valid settings file returns an empty list" duration="1"/>
    <testCase name="test parse method against bad setting configuration parse an undefined settings file returns an empty list" duration="0"/>
    <testCase name="test parse method against bad setting configuration parse an empty setting file returns an empty list" duration="0"/>
    <testCase name="test parse method against bad setting configuration parse a setting file without the key &apos;LOCAL&apos; return an empty list" duration="0"/>
    <testCase name="test parse method with correct setting configuration parse a setting file with key &apos;LOCAL&apos; return the values in an array" duration="0"/>
    <testCase name="test parse method with correct setting configuration parse a setting file with heterogeneous keys that include the key &apos;LOCAL&apos; return the LOCAL&apos;s values in an array" duration="0"/>
    <testCase name="validate bad path resource an array of paths defined as &apos;*&apos; is not resolved and an empty array is returned&apos;" duration="1"/>
    <testCase name="validate bad path resource an array of paths defined where an item is &apos;*&apos; is not resolved within an heterogeneous array and is excluded from the result" duration="0"/>
    <testCase name="validate bad path resource an empty array of paths is resolved in an empty array returned" duration="0"/>
    <testCase name="validate bad path resource a not valid path is not resolved and excluded from the result array" duration="0"/>
    <testCase name="validate bad path resource a not valid path is not resolved and excluded from the result array within an heterogeneous array" duration="1"/>
    <testCase name="validate bad path resource A resource with double slashes (or back slashes) are normalized before apply the search" duration="0"/>
    <testCase name="validate path resource with correct configuration an escaped path is found on FS and its URI is returned in the result list" duration="0"/>
    <testCase name="validate path resource with correct configuration a valid path written two times is included in the list only one time" duration="1"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\ZoweApiTest.spec.ts">
    <testCase name="ZoweApi public methods listZOSMFProfiles returns map of founded profiles" duration="1"/>
    <testCase name="ZoweApi public methods getDefaultProfileName works as expected" duration="0"/>
    <testCase name="ZoweApi public methods fetchMember call RestClient with right path" duration="1"/>
    <testCase name="ZoweApi public methods listMember call RestClient with right path" duration="1"/>
    <testCase name="ZoweApi public methods throw No Password error if profile don&apos;t have a password" duration="1"/>
    <testCase name="ZoweApi public methods createSession works fine if password is set" duration="1"/>
    <testCase name="ZoweApi private methods Creates profile params with ZOWE_CLI_HOME env variable" duration="1"/>
    <testCase name="ZoweApi private methods Creates profile params with home dir" duration="0"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\ZoweErrorTest.spec.ts">
    <testCase name="ZoweError convertError don&apos;t change ZoweError" duration="0"/>
    <testCase name="ZoweError convertError don&apos;t change Error" duration="1"/>
    <testCase name="ZoweError convertError converts 401 HTTP error to Invalid credentials" duration="0"/>
    <testCase name="ZoweError convertError converts 404 HTTP error to Not found" duration="1"/>
    <testCase name="ZoweError convertError converts HTTP ECONNREFUSED errors to ConnRefused" duration="0"/>
    <testCase name="ZoweError convertError converts HTTP ENOTFOUND errors to ConnRefused" duration="0"/>
    <testCase name="ZoweError convertError don&apos;t change any other RestClientError&apos;s" duration="0"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\SettingsTest.spec.ts">
    <testCase name="Settings initialization tests Update all settings if not present in workspace" duration="2"/>
    <testCase name="Settings initialization tests Update no settings if one present in workspace" duration="0"/>
    <testCase name=".gitignore file in .c4z folder tests Create .gitignore file if not exists" duration="2"/>
    <testCase name=".gitignore file in .c4z folder tests Modify .gitignore file if exists" duration="2"/>
    <testCase name=".gitignore file in .c4z folder tests workspace not exist" duration="0"/>
    <testCase name="Validate URI generation for a given workspace folder With a valid workspace folder, the method return a valid URI representation" duration="0"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\PathServiceTest.spec.ts">
    <testCase name="Validate capability to return a list of dataset from settings.json Given a not defined property in setting json, empty list of dataset is returned" duration="1"/>
    <testCase name="Validate capability to return a list of dataset from settings.json Given a list of dataset defined in the settings.json, a not empty result list is returned to the caller" duration="0"/>
    <testCase name="Validate dataset name against bad configurations Given a empty value as dataset name, the UI returns an appropriate message" duration="1"/>
    <testCase name="Validate dataset name against bad configurations Given a dataset with more than 8 chars, the UI returns an appropriate message" duration="0"/>
    <testCase name="Validate dataset name against bad configurations Given a dataset with a prohibited char at the beginning, the UI returns an appropriate message" duration="0"/>
    <testCase name="Validate dataset name against bad configurations Given a dataset that contains a prohibited char, the UI returns an appropriate message" duration="0"/>
    <testCase name="Validate dataset name against correct input from the user Given a dataset no longer than 8 chars, the UI will not throw any notification message to the user" duration="0"/>
    <testCase name="Validate dataset name against correct input from the user Given a correct dataset configuration, the UI will not throw any notification message to the user" duration="0"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\MiddlewareTest.spec.ts">
    <testCase name="Copybook downloader Handle copybook request" duration="1"/>
    <testCase name="Copybook downloader Handle copybook request for name with dots" duration="1"/>
    <testCase name="Copybook downloader Handle copybook download request" duration="0"/>
    <testCase name="Copybook downloader Call next for non cobol params" duration="1"/>
    <testCase name="Copybook downloader Call next for unexpected second qualifier" duration="0"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\DownloadQueueTest.spec.ts">
    <testCase name="Check download queue can add elements to queue" duration="1"/>
    <testCase name="Check download queue can wait" duration="1"/>
    <testCase name="Check download queue can have more then one element" duration="1"/>
    <testCase name="Check download queue can ignore duplicates" duration="0"/>
    <testCase name="Check download queue can stop" duration="0"/>
    <testCase name="Check download queue can stop async" duration="1"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\ProfileServiceTest.spec.ts">
    <testCase name="Profile Service tests can get profile by program name (path case)" duration="2"/>
    <testCase name="Profile Service tests Given a not empty profile defined in settings, the resolve API will return that profile" duration="0"/>
    <testCase name="Profile Service tests Given an empty profile value in settings, but opening a file with profile in the path, that profile is returned" duration="1"/>
    <testCase name="Profile Service tests If profile is not defined in settings and is not part of the document URI, undefined value is returned" duration="0"/>
  </file>
  <file path="C:\workspace\che-che4z-lsp-for-cobol\clients\cobol-lsp-vscode-extension\src\__tests__\CopybooksPathGeneratorTest.spec.ts">
    <testCase name="CopybooksPathGenerator tests creates copybook path" duration="1"/>
    <testCase name="CopybooksPathGenerator tests creates dataset path" duration="1"/>
    <testCase name="CopybooksPathGenerator tests check workspace" duration="0"/>
    <testCase name="CopybooksPathGenerator tests generates array of uris" duration="1"/>
  </file>
</testExecutions>