# This is a basic workflow to help you get started with Actions

name: Native Build

# Controls when the workflow will run
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildOnWindows:
    runs-on: windows-latest
    steps:
      - uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 16GB
          maximum-size: 16GB
          disk-root: "C:"
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1.5.0
      - uses: microsoft/setup-msbuild@v1
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 22.1.0
          native-image: true
      - name: Build with Maven
        working-directory: server
        run: mvn -e -B -Pnative -DskipTests clean package
        shell: powershell
      - uses: actions/upload-artifact@v3
        with:
          if-no-files-found: warn
          name: package-win
          path: |
            server/engine/target/*.exe
            server/engine/target/*.dll
            server/engine/target/*.txt
      - uses: actions/upload-artifact@v3
        with:
          if-no-files-found: warn
          name: logs
          path: engine/target/*.log

  buildOnMac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 22.1.0
          native-image: true
      - name: Build with Maven
        working-directory: server
        run: mvn -e -B -Pnative -DskipTests clean package
      - name: Run UPX
        uses: svenstaro/upx-action@v2
        with:
          file: server/engine/target/engine
          args: '-7'
      - name: Upload artifacts
        run: mkdir staging && cp server/engine/target/engine staging/server-mac-amd64
      - uses: actions/upload-artifact@v3
        with:
          name: package-macos
          path: staging
      - uses: actions/upload-artifact@v3
        with:
          if-no-files-found: warn
          name: logs
          path: engine/target/*.log

  buildOnLinux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 22.1.0
          native-image: true
      - name: Build with Maven
        working-directory: server
        run: mvn -e -B -Pnative -DskipTests clean package
      - name: Run UPX
        uses: crazy-max/ghaction-upx@v1.3.3
        with:
          version: latest
          file: server/engine/target/engine
          args: '-7'
      - name: Upload artifacts
        run: mkdir staging && cp server/engine/target/engine staging/server
      - uses: actions/upload-artifact@v3
        with:
          name: package-linux
          path: staging
      - uses: actions/upload-artifact@v3
        with:
          name: jar
          path: server/engine/target/server.jar
      - uses: actions/upload-artifact@v3
        with:
          if-no-files-found: warn
          name: logs
          path: server/target/*.log

  build:
    runs-on: windows-latest
    needs: [buildOnLinux, buildOnMac, buildOnWindows]
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11.0.13'
          distribution: 'microsoft'
      - run: java -version
      - uses: actions/checkout@v2
      - name: Retrieve native images
        uses: actions/download-artifact@v3
        with:
          path: staging
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: build client
        run: npm ci --ignore-scripts
        working-directory: clients/cobol-lsp-vscode-extension
      - name: postinstall
        run: npm run postinstall
        working-directory: clients/cobol-lsp-vscode-extension
      - name: configure server jar
        working-directory: clients/cobol-lsp-vscode-extension
        run: "cp -R ../../staging/jar/* ./server/jar"
      - name: configure windows executable
        working-directory: clients/cobol-lsp-vscode-extension
        run: |
          cp ../../staging/package-win/engine.build_artifacts.txt ./server/package-win
          cp ../../staging/package-win/engine.exe ./server/package-win
          cp ../../staging/package-win/sunmscapi.dll ./server/package-win
      - name: configure mac executable
        working-directory: clients/cobol-lsp-vscode-extension
        run: "chmod +x ../../staging/package-macos/server-mac-amd64; cp ../../staging/package-macos/server-mac-amd64 ./server/package-macos"
      - name: configure linux executable
        working-directory: clients/cobol-lsp-vscode-extension
        run: "chmod +x ../../staging/package-linux/server; cp ../../staging/package-linux/server ./server/package-linux"
      - name: coverage
        run: npm run coverage
        working-directory: clients/cobol-lsp-vscode-extension
      - name: integration-test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm --prefix clients/cobol-lsp-vscode-extension run test:integration
      - name: generate vsix
        working-directory: clients/cobol-lsp-vscode-extension
        run: |
          npm run package
          cp *.vsix ../../.
      - uses: actions/upload-artifact@v3
        with:
          name: vsix-package
          path: '*.vsix'
       

